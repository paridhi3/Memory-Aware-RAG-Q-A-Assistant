I want the chat interface of code 2 in code 1. I want to implement the following code taken from code 2 in code 1 so that it remembers the context:
# Chat input
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

user_input = st.chat_input("Type your question:")

if user_input:
    result = qa_chain({"question": user_input})

    # Show sources if available
    if "source_documents" in result:
        with st.expander("Sources used"):
            for doc in result["source_documents"]:
                st.write(doc.page_content[:300] + "...")

    # Save to chat history
    st.session_state.chat_history.append({"role": "user", "content": user_input})
    st.session_state.chat_history.append({"role": "assistant", "content": result["answer"]})

# Display chat history
for message in st.session_state.chat_history:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

the aim is to make code 1 use caching and memory. code 1 needs to be made into a chatbot. however, it does not need to answer questions based on a pdf. instead, it should answer any questions that the user asks and also remember the past inputs.
